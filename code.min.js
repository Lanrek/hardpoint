var makeCustomizationUrl=function(){let e=new URL(location.href);return e.hash=["/customize"].concat(e.hash.split("/").slice(-1)).join("/"),e},copyShareableLink=new ClipboardJS(".clipboard-button",{text:function(){const e=makeCustomizationUrl().href;return sendEvent("Customize","CopyLink",e),e}}),hashString=function(e){let t=0;if(!e)return t;for(let i=0;i<e.length;i++){t=31*t+e.charCodeAt(i),t|=0}return t},encodeInt24=function(e){const t=String.fromCharCode((16711680&e)>>16)+String.fromCharCode((65280&e)>>8)+String.fromCharCode(255&e);return btoa(t).replace(/\+/g,"-").replace(/\//g,"_")},hashAndEncode=function(e){const t=hashString(e);return encodeInt24(t)},encodeSmallInt=function(e){return String.fromCharCode("A".charCodeAt(0)+e)},decodeSmallInt=function(e){return e.charCodeAt(0)-"A".charCodeAt(0)},nullifySentinel=function(e){return e&&e.startsWith("<=")?null:e},elementArray=function(e){return Array.isArray(e)?e:[e]},splitTags=function(e){return e?e.split(" "):[]},roundThreeFigures=function(e){let t=2;return Math.abs(e)>100?t=0:Math.abs(e)>10&&(t=1),e.toFixed(t)},formatNumber=function(e){return e.toFixed?e>=1e9?e.toExponential():(+roundThreeFigures(e)).toLocaleString():e},sendEvent=function(e,t,i){gtag("event",t,{event_category:e,event_label:i})};class ShipId{constructor(e,t,i){this.specificationId=e,this.modificationId=t,this.loadoutId=i}get combinedId(){return ShipId._makeCombinedId(this.specificationId,this.modificationId)}serialize(){return hashAndEncode(this.specificationId)+hashAndEncode(this.modificationId)+hashAndEncode(this.loadoutId)}static deserialize(e){const t=e.substr(0,4),i=e.substr(4,4),n=(e.substr(8,4),Object.values(allVehicles).map(e=>e.shipId)),a=n.find(e=>hashAndEncode(e.specificationId)==t).specificationId,s=n.find(e=>hashAndEncode(e.modificationId)==i).modificationId;return new ShipId(a,s,void 0)}static _makeCombinedId(e,t){let i=e;return t&&(i+="_"+t),i}}class ShipSpecification{constructor(e,t){this.name=e,this._data=t,this.itemPorts=this._findItemPorts(),this.defaultItems=this._makeDefaultItems()}get tags(){return splitTags(this._data["@itemPortTags"])}get shipId(){return new ShipId(this._data["@name"],this._data["#modification"])}get displayName(){return nullifySentinel(allStrings[this._data["#vehicleName"]])||this.shipId.combinedId}get attributes(){const e=this.itemPorts.filter(e=>e.matchesType("Seat")).filter(e=>e.hasControllerMfd),t=this.itemPorts.filter(e=>e.matchesType("TurretBase","MannedTurret")),i=_.get(this._data,"MovementParams.Spaceship"),n=this._data["@size"];let a="Small";return i?n>=4?a="Large":n>=3&&(a="Medium"):a="Ground",[{name:"Size Category",category:"Description",description:"Based on physical dimensions and mass",value:a},{name:"Crew",category:"Description",description:"Seats with controls plus manned turrets",value:e.length+t.length},{name:"Total Hitpoints",category:"Survivability",description:"Total hitpoints of all ship parts -- damage to critical parts will destroy a ship faster than this implies",value:this._findParts().reduce((e,t)=>e+(t["@damageMax"]||0),0)}]}_findParts(e){let t=elementArray(_.get(this._data,"Parts.Part",[])).slice(),i=[];for(;t.length>0;){let n=t.pop();n["@class"]!=e&&e||i.push(n),elementArray(_.get(n,"Parts.Part",[])).forEach(e=>t.push(e))}return i}_findItemPorts(){return this._findParts("ItemPort").map(e=>new VehicleItemPort(e))}_makeDefaultItems(){return allLoadouts[this.name]}}class DamageQuantity{constructor(e,t,i,n){this._values=[e,t,i,n]}static fromDamageInfo(e){return new DamageQuantity(_.get(e,"@DamageDistortion",0),_.get(e,"@DamageEnergy",0),_.get(e,"@DamagePhysical",0),_.get(e,"@DamageThermal",0))}static _fromValueArray(e){return new DamageQuantity(e[0],e[1],e[2],e[3])}get distortion(){return this._values[0]}get energy(){return this._values[1]}get physical(){return this._values[2]}get thermal(){return this._values[3]}get total(){return this._values.reduce((e,t)=>e+t,0)}get type(){return this._values.reduce((e,t)=>t>0?e+1:e,0)>1?"mixed":this.distortion>0?"distortion":this.energy>0?"energy":this.physical>0?"physical":this.thermal>0?"thermal":"none"}add(e){return DamageQuantity._fromValueArray(this._values.map((t,i)=>t+e._values[i]))}scale(e){return DamageQuantity._fromValueArray(this._values.map(t=>t*e))}}class SummaryText{constructor(e,t,i){this.patterns=e,this.component=t,this.binding=i,this.patterns||(this.patterns=["No further information available"])}render(e){const t=t=>{let i=this.component.getValue(t,this.binding),n="summary-value";if(e&&this.component.type==e.type&&this.component.name!=e.name){n="summary-value-equal";const a=e.getValue(t,this.binding);if(a&&"string"!=typeof a){let e=(e,t)=>e>t;DataforgeComponent.reversedValues.includes(t)&&(e=((e,t)=>e<t)),e(i,a)&&(n="summary-value-increase"),e(a,i)&&(n="summary-value-decrease")}}return'<span class="'+n+'">'+(i=formatNumber(i))+"</span>"};return'<span class="summary">'+this.patterns.map(e=>{return"<p>"+e.replace(/{[^}]+}/g,e=>t(e.slice(1,-1)))+"</p>"}).join("")+"</span>"}}class DataforgeComponent{constructor(e,t){this.name=e,this._data=t;const i=elementArray(_.get(this._data,"Components.SCItemWeaponComponentParams.fireActions",[]))[0];this._weaponSequence=elementArray(_.get(i,"SWeaponActionSequenceParams.sequenceEntries.SWeaponSequenceEntryParams",[])),this._defaultFireAction=_.get(this._weaponSequence,"[0].weaponAction",i),this.itemPorts=this._findItemPorts(),this._pitchLimits=this._makePitchLimits()}static get reversedValues(){return["gunHeatPerShot","powerBase","powerIncrease","shieldDownDelay","quantumEfficiency","quantumCalibrationTime","quantumSpoolTime","quantumCooldown","missileLockTime","powerToEm","temperatureToIr","flightAngularPower","flightLinearPower"]}get displayName(){const e=_.get(this._data,"Components.SAttachableComponentParams.AttachDef.Localization.@Name");return nullifySentinel(allStrings[e])||this.name}get type(){return _.get(this._data,"Components.SAttachableComponentParams.AttachDef.@Type")}get subtype(){return _.get(this._data,"Components.SAttachableComponentParams.AttachDef.@SubType")}get size(){return _.get(this._data,"Components.SAttachableComponentParams.AttachDef.@Size")}get requiredTags(){return splitTags(_.get(this._data,"Components.SAttachableComponentParams.AttachDef.@RequiredTags"))}get turretInflections(){return this._pitchLimits.slice(0,-1).map(e=>e.turretRotation).map(e=>(e+180)%360-180)}getTurretPitchRange(e,t){let i={min:this.getTurretMinPitch(e),max:this.getTurretMaxPitch(e)};if(this._pitchLimits.length){const e=(360+t%360)%360,n=_.findIndex(this._pitchLimits,t=>t["@TurretRotation"]>e),a=this._pitchLimits[n],s=this._pitchLimits[n-1],o=(e-s["@TurretRotation"])/(a["@TurretRotation"]-s["@TurretRotation"]),r=s["@LowestAngle"]*(1-o)+a["@LowestAngle"]*o,l=s["@HighestAngle"]*(1-o)+a["@HighestAngle"]*o;i.min=Math.max(i.min,r),i.max=Math.min(i.max,l)}return i}getValue(e,t){const i=e.split("."),n=i.slice(1).join(".");let a=this[i[0]];const s=this["get"+i[0].charAt(0).toUpperCase()+i[0].slice(1)];s&&(a=s.call(this,t));let o=a;return n&&(o=_.get(a,n)),null==o&&(console.log("Warning: Failed to retrieve component value "+e+" for "+this.name),console.log(this._data)),o}getTurretMinYaw(e){let t=[-180];return t.push(e.port.minYaw),t.push(this._getStandardTurretRotationLimit("yaw","@LowestAngle")),t.sort((e,t)=>t-e),t[0]}getTurretMaxYaw(e){let t=[180];return t.push(e.port.maxYaw),t.push(this._getStandardTurretRotationLimit("yaw","@HighestAngle")),t.sort((e,t)=>e-t),t[0]}getTurretMinPitch(e){let t=[-90];return t.push(e.port.minPitch),t.push(this._getStandardTurretRotationLimit("pitch","@LowestAngle")),t.sort((e,t)=>t-e),t[0]}getTurretMaxPitch(e){let t=[90];return t.push(e.port.maxPitch),t.push(this._getStandardTurretRotationLimit("pitch","@HighestAngle")),t.sort((e,t)=>e-t),t[0]}getBulletSpeed(e){return _.get(this._data,"#ammoParams.@speed",0)}getBulletDuration(e){return _.get(this._data,"#ammoParams.@lifetime",0)}getBulletRange(e){return this.getBulletSpeed(e)*this.getBulletDuration(e)}getTachyonZeroDamageRange(e){return _.get(this._data,"#ammoParams.projectileParams.TachyonProjectileParams.@zeroDamageRange",0)}getTachyonFullDamageRange(e){return _.get(this._data,"#ammoParams.projectileParams.TachyonProjectileParams.@fullDamageRange",0)}getBulletCount(e){return _.get(_.values(this._defaultFireAction)[0],"launchParams.SProjectileLauncher.@pelletCount",1)}getGunAlpha(e){const t=_.get(this._data,"#ammoParams.projectileParams.BulletProjectileParams"),i=_.get(t,"damage.DamageInfo"),n=_.get(t,"detonationParams.ProjectileDetonationParams.explosionParams.damage.DamageInfo"),a=_.get(this._data,"#ammoParams.projectileParams.TachyonProjectileParams.damage.DamageParams.@damageTotal",0);return new DamageQuantity(0,a,0,0).add(DamageQuantity.fromDamageInfo(i).add(DamageQuantity.fromDamageInfo(n)))}getGunFireRate(e){return _.get(_.values(this._defaultFireAction)[0],"@fireRate",0)}getGunBurstDps(e){return this.getGunAlpha(e).scale(this.getBulletCount(e)*this.getGunFireRate(e)/60)}getGunStandbyHeat(e){return _.get(this._data,"Components.SCItemWeaponComponentParams.connectionParams.@heatRateOnline",0)}getGunHeatPerShot(e){return _.get(_.values(this._defaultFireAction)[0],"@heatPerShot",0)}getGunMaxCoolingPerShot(e){const t=60/this.getGunFireRate(e);return this.maxCooling*this.specificHeatCapacity*t}getGunSustainedDps(e){const t=this.maxCooling*this.specificHeatCapacity*e.customization.coolingEfficiency;let i=this.getGunFireRate(e);return i*=Math.min(1,t/this.getHeatingEnergy(e))||0,this.getGunAlpha(e).scale(this.getBulletCount(e)*i/60)}getGunMaximumAmmo(e){return _.get(this._data,"Components.SAmmoContainerComponentParams.@maxAmmoCount",0)}getGunMagazineDuration(e){return 60*this.getGunMaximumAmmo(e)/this.getGunFireRate(e)}getGunMagazineDamage(e){return this.getGunAlpha(e).scale(this.getBulletCount(e)*this.getGunMaximumAmmo(e))}getMissileDamage(e){const t=_.get(this._data,"Components.SCItemMissileParams.explosionParams.damage.DamageInfo");return DamageQuantity.fromDamageInfo(t)}getMissileRange(e){return _.get(this._data,"Components.SCItemMissileParams.targetingParams.@trackingDistanceMax",0)}getMissileGuidance(e){return _.get(this._data,"Components.SCItemMissileParams.targetingParams.@trackingSignalType","CrossSection")}getMissileTrackingAngle(e){return _.get(this._data,"Components.SCItemMissileParams.targetingParams.@trackingAngle",0)}getMissileLockTime(e){return _.get(this._data,"Components.SCItemMissileParams.targetingParams.@lockTime",0)}getMissileMaximumSpeed(e){return _.get(this._data,"Components.SCItemMissileParams.GCSParams.@linearSpeed",0)}getMissileFlightTime(e){return _.get(this._data,"Components.SCItemMissileParams.GCSParams.@interceptTime",0)+_.get(this._data,"Components.SCItemMissileParams.GCSParams.@terminalTime",0)}getMissileFlightRange(e){return this.getMissileMaximumSpeed(e)*this.getMissileFlightTime(e)}getShieldCapacity(e){return _.get(this._data,"Components.SCItemShieldGeneratorParams.@MaxShieldHealth",0)}getShieldRegeneration(e){return _.get(this._data,"Components.SCItemShieldGeneratorParams.@MaxShieldRegen",0)}getShieldDownDelay(e){return _.get(this._data,"Components.SCItemShieldGeneratorParams.@DownedRegenDelay",0)}getQuantumFuel(e){return _.get(this._data,"Components.SCItemFuelTankParams.@capacity",0)}getQuantumRange(e){return _.get(this._data,"Components.SCItemQuantumDriveParams.@jumpRange",0)/1e6}getQuantumEfficiency(e){return 1e3*_.get(this._data,"Components.SCItemQuantumDriveParams.@quantumFuelRequirement",0)}getQuantumSpeed(e){return _.get(this._data,"Components.SCItemQuantumDriveParams.params.@driveSpeed",0)/1e6}getQuantumCooldown(e){return _.get(this._data,"Components.SCItemQuantumDriveParams.params.@cooldownTime",0)}getQuantumSpoolTime(e){return _.get(this._data,"Components.SCItemQuantumDriveParams.params.@spoolUpTime",0)}getQuantumCalibrationTime(e){return _.get(this._data,"Components.SCItemQuantumDriveParams.params.@maxCalibrationRequirement",0)/_.get(this._data,"Components.SCItemQuantumDriveParams.params.@calibrationRate",0)}get cargoCapacity(){const e=e=>Math.floor(_.get(t,e,0)/1.25),t=_.get(this._data,"Components.SCItemCargoGridParams.dimensions",0);let i=e("@x")*e("@y")*e("@z");const n=_.get(this._data,"#embedded",{});for(const e of _.values(n)){const t=allItems[e.itemName];i+=_.get(t,"cargoCapacity",0)}return i}getSpeed(e){return _.get(this._data,"Components.IFCSParams.@maxSpeed",0)}getAfterburner(e){return _.get(this._data,"Components.IFCSParams.@maxAfterburnSpeed",0)}getAngularVelocityPitch(e){return _.get(this._data,"Components.IFCSParams.maxAngularVelocity.@x",0)}getAngularVelocityRoll(e){return _.get(this._data,"Components.IFCSParams.maxAngularVelocity.@y",0)}getAngularVelocityYaw(e){return _.get(this._data,"Components.IFCSParams.maxAngularVelocity.@z",0)}getThrusterType(e){return _.get(this._data,"Components.SCItemThrusterParams.@thrusterType")}getPowerUsage(e){return"Active"==e.powerSelector?this.getPowerDraw(e):"Standby"==e.powerSelector?"Turret"==this.type||"TurretBase"==this.type?this.getPowerDraw(e):this.getPowerBase(e):0}getPowerBase(e){return"PowerPlant"!=this.type?_.get(this._data,"Components.EntityComponentPowerConnection.@PowerBase",0):0}getPowerDraw(e){return"PowerPlant"!=this.type?_.get(this._data,"Components.EntityComponentPowerConnection.@PowerDraw",0):0}getPowerIncrease(e){return this.getPowerDraw(e)-this.getPowerBase(e)}getPowerAvailable(e){return"PowerPlant"==this.type&&"Off"!=e.powerSelector?_.get(this._data,"Components.EntityComponentPowerConnection.@PowerDraw",0):0}getPowerGeneration(e){return"PowerPlant"==this.type?this.getPowerAvailable(e)*Math.min(1,e.customization.powerUsageRatio||0):0}getPowerToEm(e){return _.get(this._data,"Components.EntityComponentPowerConnection.@PowerToEM",0)}getTemperatureToIr(e){return _.get(this._data,"Components.EntityComponentHeatConnection.@TemperatureToIR",0)}get startCoolingTemperature(){return _.get(this._data,"Components.EntityComponentHeatConnection.@StartCoolingTemperature",0)}get specificHeatCapacity(){return _.get(this._data,"Components.EntityComponentHeatConnection.@SpecificHeatCapacity",0)*_.get(this._data,"Components.EntityComponentHeatConnection.@Mass",0)}get maxCooling(){return _.get(this._data,"Components.EntityComponentHeatConnection.@MaxCoolingRate",0)}getOverheatTemperature(e){return _.get(this._data,"Components.EntityComponentHeatConnection.@OverheatTemperature",0)}getOverheatTime(e){const t=this.getHeatingEnergy(e),i=this.maxCooling*this.specificHeatCapacity*e.customization.coolingEfficiency;return(this.getOverheatTemperature(e)-this.startCoolingTemperature)*this.specificHeatCapacity/(t-i)}getCurrentTemperature(e){return 0}getHeatingEnergy(e){const t=_.get(this._data,"Components.EntityComponentHeatConnection.@ThermalEnergyBase",0),i=_.get(this._data,"Components.EntityComponentHeatConnection.@ThermalEnergyDraw",0);if("PowerPlant"==this.type&&"Active"==e.powerSelector){return this.getPowerGeneration(e)/this.getPowerAvailable(e)*i}if("WeaponGun"==this.type&&"Active"==e.powerSelector){let t=this.getGunFireRate(e);return this._weaponSequence.length>1&&(t=258),this.getGunHeatPerShot(e)*t/60}return"Active"==e.powerSelector?i:"Standby"==e.powerSelector?t:0}getCoolingUsage(e){if(0==this.specificHeatCapacity)return 0;const t=this.maxCooling*this.specificHeatCapacity;return Math.min(this.getHeatingEnergy(e),t)}getCoolingAvailable(e){return"Cooler"==this.type&&"Off"!=e.powerSelector?_.get(this._data,"Components.SCItemCoolerParams.@CoolingRate",0):0}getCoolingEfficiency(e){return e.customization.coolingEfficiency}getEmSignature(e){return(this.getPowerGeneration(e)+this.getPowerUsage(e))*this.getPowerToEm(e)}getIrSignature(e){return this.getCurrentTemperature(e)*this.getTemperatureToIr(e)}getSummary(e){if("WeaponGun"==this.type){let t="{gunAlpha.total}";this.getBulletCount(e)>1&&(t+=" X {bulletCount}");let i=new SummaryText(["{gunBurstDps.total} dps = "+t+" {gunAlpha.type} damage X {gunFireRate} rpm","{gunSustainedDps.total} sustained dps ({gunHeatPerShot} heat/shot; {gunMaxCoolingPerShot} max cooling/shot X {coolingEfficiency} efficiency)"],this,e);return this.getOverheatTime(e)>0&&i.patterns.push("Overheats after {overheatTime} seconds of continuous fire"),this.getTachyonFullDamageRange(e)>0?i.patterns.push("{tachyonZeroDamageRange} meter range with reduced damage after {tachyonFullDamageRange} meters"):i.patterns.push("{bulletRange} meter range = {bulletSpeed} m/s projectile speed X {bulletDuration} seconds"),this.getGunMaximumAmmo(e)>0&&i.patterns.push("{gunMaximumAmmo} rounds deplete in {gunMagazineDuration} seconds for potentially {gunMagazineDamage.total} damage"),i}return"Turret"!=this.type&&"TurretBase"!=this.type||!this.itemPorts[0]?"MissileLauncher"==this.type?new SummaryText(["{itemPorts.length} size {itemPorts.[0].maxSize} missiles"],this,e):"Shield"==this.type?new SummaryText(["{shieldCapacity} shield capacity","Regenerates {shieldRegeneration} capacity/second with a {shieldDownDelay} second delay after dropping"],this,e):"QuantumDrive"==this.type?new SummaryText(["{quantumRange} gigameter jump distance at {quantumSpeed} megameters/sec","Consumes {quantumEfficiency} fuel per gigameter","Calibrates in no less than {quantumCalibrationTime} seconds and spools in {quantumSpoolTime} seconds","{quantumCooldown} second cooldown after jumping"],this,e):"Missile"==this.type?new SummaryText(["{missileDamage.total} {missileDamage.type} damage","{missileLockTime} seconds lock time with {missileRange} meter lock range","{missileGuidance} sensors with {missileTrackingAngle} degree view","{missileFlightRange} meter flight = {missileMaximumSpeed} m/s speed X {missileFlightTime} seconds"],this,e):"Container"==this.type?new SummaryText(["{cargoCapacity} SCUs cargo capacity"],this,e):"PowerPlant"==this.type?new SummaryText(["{powerAvailable} maximum power generation per second"],this,e):"Cooler"==this.type?new SummaryText(["{coolingAvailable} max cooling / second"],this,e):new SummaryText:new SummaryText(["{itemPorts.length} size {itemPorts.[0].maxSize} item ports"],this,e)}_getTurretRotationLimits(e){const t=_.get(this._data,"Components.SCItemTurretParams.movementList.SCItemTurretJointMovementParams");if(null!=t){const i=t.find(t=>_.keys(t[e+"Axis"]).length>0);return _.get(i,e+"Axis.SCItemTurretJointMovementAxisParams.angleLimits")}}_getStandardTurretRotationLimit(e,t){return _.get(this._getTurretRotationLimits(e),"SCItemTurretStandardAngleLimitParams."+t)}_makePitchLimits(){const e=_.get(this._getTurretRotationLimits("pitch"),"SCItemTurretCustomAngleLimitParams.AngleLimits.SCItemTurretCustomAngleLimit");if(null!=e&&e.length>1){let t=e.slice(),i=_.cloneDeep(t[0]);return i["@TurretRotation"]+=360,t.push(i),t}return[]}_findItemPorts(){const e=_.get(this._data,"Components.SCItem.ItemPorts.SItemPortCoreParams.Ports.SItemPortDef",[]);return elementArray(e).map(e=>new DataforgeItemPort(e))}}class ItemPortType{constructor(e,t){this.type=e,this.subtype=t}}class BaseItemPort{availableComponents(e){let t=Object.keys(allItems);return(t=t.filter(e=>!e.toLowerCase().includes("test_")&&!e.includes("_Template"))).filter(t=>this.matchesComponent(e,allItems[t]))}matchesType(e,t){return!!this.types&&this.types.some(function(i){return i.type==e&&(null==t||"UNDEFINED"==t||null==i.subtype||i.subtype==t)})}matchesComponent(e,t){if(!this.matchesType(t.type,t.subtype))return!1;if(null!=this.minSize&&t.size<this.minSize)return!1;if(null!=this.maxSize&&t.size>this.maxSize)return!1;if(t.requiredTags){const i=e.concat(this.tags);for(const e of t.requiredTags)if(!i.includes(e))return!1}return!0}}class VehicleItemPort extends BaseItemPort{constructor(e){super(),this._data=e,this.name=e["@name"],this.editable=!_.get(e,"ItemPort.@flags","").includes("uneditable"),this.types=this._makeTypes()}get hasControllerMfd(){const e=["Screen_TV","habitation_bed_screen"],t=elementArray(_.get(this._data,"ItemPort.ControllerDef"));return elementArray(_.get(t,"[0].UserDef.Observerables.Observerable",[])).filter(t=>!e.includes(_.get(t,"@screensAvail",""))).length>0}get minSize(){return _.get(this._data,"ItemPort.@minsize")}get maxSize(){return _.get(this._data,"ItemPort.@maxsize")}get tags(){return splitTags(_.get(this._data,"ItemPort.@requiredTags"))}get minYaw(){return _.get(this._data,"ItemPort.Yaw.@min")}get maxYaw(){return _.get(this._data,"ItemPort.Yaw.@max")}get minPitch(){return 0==this._minPitch&&0==this._maxPitch?-2.5:this._minPitch}get maxPitch(){return 0==this._minPitch&&0==this._maxPitch?2.5:this._maxPitch}get _minPitch(){return _.get(this._data,"ItemPort.Pitch.@min")}get _maxPitch(){return _.get(this._data,"ItemPort.Pitch.@max")}_makeTypes(){const e=elementArray(_.get(this._data,"ItemPort.Types.Type",[])),t=[];for(const i of e){let e=[void 0];i["@subtypes"]&&(e=i["@subtypes"].split(","));for(const n of e)t.push(new ItemPortType(i["@type"],n))}return t}}class DataforgeItemPort extends BaseItemPort{constructor(e){super(),this._data=e}get name(){return this._data["@Name"]}get editable(){return!this._data["@Flags"].includes("uneditable")}get minSize(){return this._data["@MinSize"]}get maxSize(){return this._data["@MaxSize"]}get tags(){return splitTags(this._data["@PortTags"])}get types(){const e=_.get(this._data,"Types.SItemPortDefTypes",[]);return elementArray(e).map(e=>new ItemPortType(e["@Type"],_.get(e,"SubTypes.Enum.@value")))}}class ItemBindingGroup{constructor(e){this.members=e}get name(){return this.members.length+this.memberPortNames.sort()[0]}get memberPortNames(){return this.members.map(e=>e.port.name)}get allIdentical(){const e=function(e,t){return _.get(e,"name")==_.get(t,"name")||ItemBindingGroup.turretsSimilar(e,t)},t=this.members[0],i=t.selectedComponent;for(const n of this.members.slice(1)){if(!e(i,n.selectedComponent))return!1;if(1==t.portPath.length)for(const i of Object.keys(t.childBindings)){const a=t.childBindings[i],s=n.childBindings[i];if(!e(a.selectedComponent,s.selectedComponent))return!1}}return!0}static turretsSimilar(e,t){return("TurretBase"==_.get(e,"type")||"Turret"==_.get(t,"type"))&&_.get(e,"type")==_.get(t,"type")&&_.get(e,"itemPorts.length")==_.get(t,"itemPorts.length")&&_.get(e,"itemPorts.[0].maxSize")==_.get(t,"itemPorts.[0].maxSize")}static findGroups(e){if(null==e)return;let t=[];for(const i of e){const e=t.findIndex(e=>e[0].port.minSize==i.port.minSize&&e[0].port.maxSize==i.port.maxSize&&e[0].port.editable==i.port.editable&&(e[0].port.editable||_.get(e[0].selectedComponent,"name")==_.get(i.selectedComponent,"name")||ItemBindingGroup.turretsSimilar(e[0].selectedComponent,i.selectedComponent))&&_.isEqual(e[0].port.types,i.port.types)&&_.isEqual(e[0].port.tags,i.port.tags));e>=0?t[e].push(i):t.push([i])}return t.map(e=>new ItemBindingGroup(e))}}class ItemBinding{constructor(e,t,i,n){if(this.port=e,this.parentBinding=t,this.childBindings={},this.customization=i,this.defaultComponent=void 0,n){const e=this._getDefaultComponent(n);e&&(this.defaultComponent=allItems[e])}this._setSelectedComponent(this.defaultComponent,n);const a=["Turret","TurretBase","WeaponGun","PowerPlant","Cooler","Misc"];this._powerSelector="Standby",this.selectedComponent&&(a.includes(this.selectedComponent.type)&&(this._powerSelector="Active"),"Main"==this.selectedComponent.getThrusterType(this)&&(this._powerSelector="Active"))}get powerSelector(){let e=this;for(;e.parentBinding;)e=e.parentBinding;return e._powerSelector}set powerSelector(e){this._powerSelector=e}get selectedComponent(){return this._selectedComponent}set selectedComponent(e){this.port.editable&&this._setSelectedComponent(e)}get childGroups(){return ItemBindingGroup.findGroups(Object.values(this.childBindings))}get customized(){return _.get(this.selectedComponent,"name")!=_.get(this.defaultComponent,"name")||Object.values(this.childBindings).some(e=>e.customized)}get portPath(){let e=[],t=this;for(;t;)e.unshift(t.port.name),t=t.parentBinding;return e}_setSelectedComponent(e,t){if(this._selectedComponent=e,this.childBindings={},e)for(const i of e.itemPorts)Vue.set(this.childBindings,i.name,new ItemBinding(i,this,this.customization,t))}_getDefaultComponent(e){let t,i=e;for(const e of this.portPath){if(!i)return;t=i[e],i=_.get(t,"children")}return _.get(t,"itemName")}}class ShipCustomization{constructor(e,t=null,i=null){this.shipId=e,this.storageKey=t,this.name=i,this.childBindings={};for(const e of this._specification.itemPorts)this.childBindings[e.name]=new ItemBinding(e,void 0,this,this._specification.defaultItems);this.childGroups=ItemBindingGroup.findGroups(Object.values(this.childBindings)),this.calculateDerivedValues(),this.hoveredBindings=[]}serialize(){let e="1";e+=this.shipId.serialize();const t=(e,i)=>{const n=e=>{const i=t(e.childBindings,e.childGroups);return"B"+hashAndEncode(e.port.name)+hashAndEncode(e.selectedComponent.name)+i},a=e=>{const i=e.members[0];let n={};for(const t in i.childBindings){const a=e.members.map(e=>e.childBindings[t]).find(e=>e.customized);n[t]=a||i.childBindings[t]}const a=t(n,i.childGroups);return"G"+hashAndEncode(e.name)+hashAndEncode(i.selectedComponent.name)+a};let s="",o=0,r=Object.values(e).filter(e=>e.customized);for(const e of i.filter(e=>e.members.length>1))e.allIdentical&&e.members.some(e=>r.some(t=>t.port.name==e.port.name))&&(s+=a(e),o+=1,r=r.filter(t=>!e.members.some(e=>e.port.name==t.port.name)));for(const e of r)s+=n(e),o+=1;return encodeSmallInt(o)+s};return e+=t(this.childBindings,this.childGroups)}static deserialize(e,t=null,i=null){e.substr(0,1);const n=e.substr(1,12);let a=new ShipCustomization(ShipId.deserialize(n),t,i);const s=e=>{const t=Object.keys(allItems).find(t=>hashAndEncode(t)==e);return allItems[t]},o=(t,i)=>{const n=decodeSmallInt(e.substr(i,1));i+=1;for(let a=0;a<n;a+=1){const n=e.substr(i,1),a=e.substr(i+1,4),r=e.substr(i+5,4);i+=9;let l=[];if("B"==n){const e=Object.keys(t[0].childBindings).find(e=>hashAndEncode(e)==a);for(const i of t){const t=i.childBindings[e];l.push(t)}}else{if("G"!=n)throw new Error("Invalid discriminator '"+n+"'");{const e=t[0].childGroups.map(e=>e.name).find(e=>hashAndEncode(e)==a);for(const i of t){const t=i.childGroups.find(t=>t.name==e);for(const e of t.members)l.push(e)}}}const m=s(r);l.every(e=>_.get(e.selectedComponent,"name")==_.get(m,"name"))||l.forEach(e=>e.selectedComponent=m),i=o(l,i)}return i};return o([a],13),a}get displayName(){return this._specification.displayName}get shipManufacturer(){return this.displayName.split(/[ _]/)[0].trim()}get shipName(){return this.displayName.split(/[ _]/).slice(1).join(" ").trim()}get tags(){return this._specification.tags}get coolingEfficiency(){return Math.min(1,1/this.coolingUsageRatio)}get powerEfficiency(){return Math.min(1,1/this.powerUsageRatio)}calculateDerivedValues(){this.powerUsageRatio=this._getPowerUsageRatio(),this.coolingUsageRatio=this._getCoolingUsageRatio()}get attributes(){const e=this._allComponentBindings,t=e.filter(e=>"Active"==e.powerSelector),i=this._sumComponentValue(e,"quantumFuel"),n=this._sumComponentValue(e,"quantumEfficiency"),a=this._sumComponentValue(e,"powerUsage"),s=this._sumComponentValue(e,"powerAvailable"),o=this._sumComponentValue(e,"coolingUsage"),r=this._sumComponentValue(e,"coolingAvailable"),l=this._sumComponentValue(e,"cargoCapacity"),m=this._sumComponentValue(e,"angularVelocityPitch"),c=this._sumComponentValue(e,"angularVelocityRoll"),u=this._sumComponentValue(e,"angularVelocityYaw"),h=Math.max(u,m);let d=this._specification.attributes;d=d.concat([{name:"Normal Speed",category:"Maneuverability",description:"Normal flight speed",value:this._sumComponentValue(e,"speed")},{name:"Maximum Speed",category:"Maneuverability",description:"Maximum flight speed",value:this._sumComponentValue(e,"afterburner")},{name:"Yaw Rate Limit",category:"Maneuverability",description:"Maximum yaw rate in degrees/second not considering acceleration",value:u},{name:"Pitch Rate Limit",category:"Maneuverability",description:"Maximum pitch rate in degrees/second not considering acceleration",value:m},{name:"Turn Rate Limit",category:"Maneuverability",description:"Maximum yaw or pitch rate in degrees/second not considering acceleration",value:h,comparison:!0},{name:"Roll Rate Limit",category:"Maneuverability",description:"Maximum roll rate in degrees/second not considering acceleration",value:c},{name:"Loadout Name",category:"Description",value:this.name},{name:"Ship Name",category:"Description",value:this.shipName},{name:"Manufacturer",category:"Description",value:this.shipManufacturer},{name:"Cargo Capacity",category:"Travel",description:"Total cargo capacity in SCUs",value:l},{name:"Power Generation",category:"Power",description:"Total power generating capacity of all power plants",value:Math.round(s)},{name:"Power Usage",category:"Power",description:"Sum of the power consumption of all components in their current state",value:Math.round(a)},{name:"Power Usage Ratio",category:"Power",description:"Percentage of power generation capacity used by current settings",value:Math.round(100*a/s)+"%"},{name:"Power Efficiency",category:"Power",description:"Reduced effectiveness of components because of insufficient power",value:Math.round(100*this.powerEfficiency)+"%"},{name:"Cooling Available",category:"Cooling",description:"Total heat dissipation capacity of all coolers",value:Math.round(r)},{name:"Cooling Usage",category:"Cooling",description:"Total heat dissipation need of all components.",value:Math.round(o)},{name:"Cooling Usage Ratio",category:"Cooling",description:"Percentage of cooling capacity used by current settings",value:Math.round(100*o/r)+"%"},{name:"Cooling Efficiency",category:"Cooling",description:"Reduced effectiveness of components because of insufficient cooling",value:Math.round(100*this.coolingEfficiency)+"%"},{name:"Total Shields",category:"Survivability",description:"Total capacity of all shield generators",value:Math.round(this._sumComponentValue(e,"shieldCapacity"))},{name:"Total Burst DPS",category:"Guns",description:"Total gun DPS without considering heat, power, or ammo",value:Math.round(this._sumComponentValue(t,"gunBurstDps.total"))},{name:"Total Sustained DPS",description:"Total gun DPS that can be sustained without overheating",category:"Guns",value:Math.round(this._sumComponentValue(t,"gunSustainedDps.total"))},{name:"Missile Count",description:"Number of missiles equipped",category:"Missiles",value:e.filter(e=>"Missile"==e.selectedComponent.type).length},{name:"Total Missile Damage",description:"Total potential damage of all missiles",category:"Missiles",value:Math.round(this._sumComponentValue(e,"missileDamage.total"))},{name:"Quantum Speed",description:"Max quantum travel speed in megameters/sec",category:"Travel",value:_.round(this._sumComponentValue(e,"quantumSpeed"),2)},{name:"Quantum Fuel",description:"Total capacity of all quantum fuel tanks",category:"Travel",value:Math.round(i)},{name:"Quantum Range",description:"Gigameters of quantum travel range based on fuel capacity",category:"Travel",value:Math.round(i/n)||0},{name:"EM Signature",description:"Total EM signature emitted by the vehicle",category:"Signature",value:Math.round(this._sumComponentValue(e,"emSignature"))},{name:"IR Signature",description:"Total IR signature emitted by the vehicle",category:"Signature",value:Math.round(this._sumComponentValue(e,"irSignature"))}]);const p=shipAttributeOverrides[this.shipId.combinedId];return p&&Object.keys(p).forEach(e=>d.find(t=>t.name==e).value=p[e]),d}get _specification(){return allVehicles[this.shipId.combinedId]}get _allComponentBindings(){const e=t=>{let i=[t];for(const n of Object.values(t.childBindings))i=i.concat(e(n));return i};let t=[];for(const i of Object.values(this.childBindings))t=t.concat(e(i));return t=t.filter(e=>e.selectedComponent)}_sumComponentValue(e,t){return e.reduce((e,i)=>e+i.selectedComponent.getValue(t,i),0)}_getPowerUsageRatio(){const e=this._allComponentBindings;return this._sumComponentValue(e,"powerUsage")/this._sumComponentValue(e,"powerAvailable")}_getCoolingUsageRatio(){const e=this._allComponentBindings;return this._sumComponentValue(e,"coolingUsage")/this._sumComponentValue(e,"coolingAvailable")}}var allLoadouts=loadoutData,allVehicles={};for(const e of Object.keys(vehicleData)){const t=new ShipSpecification(e,vehicleData[e]);allVehicles[t.shipId.combinedId]=t}var allItems={};for(const e of Object.keys(itemData))allItems[e]=new DataforgeComponent(e,itemData[e]);const makeDefaultShipCustomizations=function(){return Object.values(allVehicles).map(e=>new ShipCustomization(e.shipId))};var defaultShipCustomizations=Object.values(allVehicles).map(e=>new ShipCustomization(e.shipId)),turretRotationsDefined={};for(customization of Object.values(defaultShipCustomizations)){const e=["Turret","TurretBase"],t=Object.values(customization.childBindings).filter(t=>e.some(e=>t.port.matchesType(e))).map(e=>customization.shipId.specificationId+"."+e.port.name).filter(e=>null==_.get(turretRotations,e));0==t.length?turretRotationsDefined[customization.shipId.combinedId]=!0:(console.log("Warning: Missing turret rotations for "+customization.shipId.combinedId),t.forEach(e=>console.log("  "+e)))}class LoadoutStorage{constructor(){this._stored={};for(const e of Object.keys(localStorage))try{const t=localStorage.getItem(e),i=JSON.parse(t);this._stored[e]=ShipCustomization.deserialize(i.value,e,i.name)}catch(t){console.warn(t),console.warn("Unable to load saved loadout "+e)}}get all(){return Object.values(this._stored)}get(e){return this._stored[e]}set(e,t){t||(t=e.serialize()),this._stored[e.storageKey]=e;const i=JSON.stringify({name:e.name,value:t});try{localStorage.setItem(e.storageKey,i)}catch(t){console.warn(t),console.warn("Unable to save loadout "+e.storageKey)}}remove(e){delete this._stored[e],localStorage.removeItem(e)}}var loadoutStorage=new LoadoutStorage,itemPortGroup=Vue.component("item-port-group",{template:"#item-port-group",props:["customization","groupName","parentBindings"],data:function(){const e=this.getAllGroups();return{allGroups:e,prototypeGroup:e[0],linked:e[0].allIdentical}},computed:{linkable:function(){return this.prototypeGroup.members.length>1},buttonText:function(){return this.linked?"Unlink":"Link"}},methods:{getAllGroups:function(){return this.parentBindings?this.parentBindings.map(e=>e.childGroups.find(e=>e.name==this.groupName)):[this.customization.childGroups.find(e=>e.name==this.groupName)]},getBindingMap:function(){let e=[];for(const t of this.prototypeGroup.members)e.push({prototypeBinding:t,targetBindings:this.allGroups.map(e=>e.members.find(e=>e.port.name==t.port.name))});return this.linked&&(e=[{prototypeBinding:this.prototypeGroup.members[0],targetBindings:e.reduce((e,t)=>e.concat(t.targetBindings),[])}]),e},onClick:function(){if(this.linked=!this.linked,this.linked){const e=this.allGroups[0].members[0],t=this.allGroups[0].members[0].childBindings;for(const i of this.allGroups)for(const n of i.members)if(n.selectedComponent=e.selectedComponent,n.powerSelector=e.powerSelector,1==n.portPath.length)for(const e of Object.keys(t))n.childBindings[e].selectedComponent=t[e].selectedComponent}sendEvent("Customize","Link",this.linked)}}}),componentDisplay=Vue.component("component-display",{template:"#component-display",props:["componentName","disabled","bindings","referenceName"],computed:{component:function(){return allItems[this.componentName]},reference:function(){return allItems[this.referenceName]}},methods:{formatNumber:formatNumber}}),componentSelector=Vue.component("component-selector",{template:"#component-selector",props:["customization","bindings","nested"],data:function(){return{visible:!1}},computed:{availableComponents:function(){return this.bindings[0].port.availableComponents(this.customization.tags)},label:function(){const e=this.bindings[0].port;let t=e.minSize;e.minSize!=e.maxSize&&(t+="-"+e.maxSize);let i=e.name;return this.bindings.length>1&&(i+=" and similar"),i+" (size "+t+")"},selectedComponentName:function(){const e=this.bindings[0].selectedComponent;return _.get(e,"name")},activePowerName:function(){const e=_.get(this.bindings[0].selectedComponent,"type");return"WeaponGun"==e||"MissileLauncher"==e||"Turret"==e||"TurretBase"==e||"Misc"==e?"Firing":"Shield"==e?"Recharging":"QuantumDrive"==e?"Spooling":"Active"},hasStandby:function(){const e=_.get(this.bindings[0].selectedComponent,"type");return"PowerPlant"!=e&&"Cooler"!=e}},methods:{onVisibleChange:function(e){this.visible=e;const t=this.$refs.dropdown.$el.offsetWidth;this.$refs.dropdown.$refs.drop.$el.style.width=t+"px",this.visible&&sendEvent("Customize","ViewComponents",this.bindings[0].port.name)},onClick:function(e){if(!this.bindings.every(t=>_.get(t.selectedComponent,"name")==e))for(const t of this.bindings)t.selectedComponent=allItems[e];sendEvent("Customize","SelectComponent",e)},onPowerSelectorChange:function(e){for(const t of this.bindings)t.powerSelector=e;sendEvent("Customize","ChangePower",e)}}}),actualMaterial=new THREE.MeshLambertMaterial({side:THREE.DoubleSide,depthTest:!1,color:8092539,opacity:.25,transparent:!0}),hoverMaterial=new THREE.MeshLambertMaterial({side:THREE.DoubleSide,depthTest:!1,color:2985200,opacity:.25,transparent:!0}),stencilMaterial=new THREE.MeshLambertMaterial({colorWrite:!1,depthWrite:!1,side:THREE.DoubleSide}),coverageDisplay=Vue.component("coverage-display",{template:"#coverage-display",props:["customization"],data:function(){return{selectedView:"Side"}},watch:{customization:{handler:function(e){this.makeCoverageSegments(),this.renderScene()},deep:!0},selectedView:function(e){sendEvent("Customize","ChangeCoverageView",e)}},methods:{renderScene:function(){const e=this.renderer.context;this.renderer.clear(),this.camera.near=this.cameraDistance,this.camera.updateProjectionMatrix();for(const t of Object.values(this.segments))this.renderer.clearStencil(),e.enable(e.STENCIL_TEST),e.stencilFunc(e.ALWAYS,1,255),e.stencilOp(e.KEEP,e.KEEP,e.INCR),this.renderer.render(t.stencil,this.camera),e.stencilFunc(e.EQUAL,1,1),e.stencilOp(e.KEEP,e.KEEP,e.DECR),this.renderer.render(t.actual,this.camera),e.disable(e.STENCIL_TEST);this.camera.near=5,this.camera.updateProjectionMatrix(),this.renderer.render(this.baseScene,this.camera)},updateControls:function(){requestAnimationFrame(this.updateControls),this.controls.update()},onControlsChange:function(e){const t=e.target.object.position;t.x+t.y+t.z!=this.cameraDistance&&(this.selectedView="Free"),this.renderScene()},onResize:function(e,t=0){this.$refs.canvas.width=this.$refs.container.offsetWidth-t,this.$refs.canvas.height=this.$refs.canvas.width,this.camera.updateProjectionMatrix(),this.renderer.setSize(this.$refs.canvas.width,this.$refs.canvas.height),this.controls.handleResize(),this.renderScene()},onViewChange:function(e){"Free"!=this.selectedView&&(this.positionCamera(),this.renderScene())},positionCamera:function(){this.camera.position.set(this.cameraDistance*("Front"==this.selectedView),this.cameraDistance*("Side"==this.selectedView),this.cameraDistance*("Top"==this.selectedView)),"Top"==this.selectedView?this.camera.up.set(1,0,0):this.camera.up.set(0,0,1),this.camera.lookAt(0,0,0),this.camera.updateProjectionMatrix()},sphericalToCartesian:function(e,t,i){var n=e*Math.PI/180,a=t*Math.PI/180;return new THREE.Vector3(i*Math.cos(a)*Math.cos(n),i*Math.cos(a)*Math.sin(n),i*Math.sin(a))},makeCoverageSegments:function(){for(const e of Object.values(this.segments)){for(mesh of e.actual.children.filter(e=>"Mesh"==e.type))e.actual.remove(mesh);for(mesh of e.stencil.children.filter(e=>"Mesh"==e.type))e.stencil.remove(mesh);e.geometry.dispose()}this.renderer.renderLists.dispose(),this.segments={};const e=e=>_.max(Object.values(e.childBindings).filter(e=>e.selectedComponent).map(e=>e.selectedComponent.getBulletRange(e))),t=["Turret","TurretBase"],i=Object.values(this.customization.childBindings).filter(e=>t.includes(_.get(e,"selectedComponent.type"))),n=_.max(i.map(t=>e(t)));for(const t of i){const i=e(t);i&&this.makeCoverageSegment(t,i/n)}},makeCoverageSegment:function(e,t){const i=this.sceneRadius*t,n=e.selectedComponent.getTurretMinYaw(e),a=e.selectedComponent.getTurretMaxYaw(e),s=Math.ceil(Math.abs((a-n)/10)),o=s,r=(a-n)/s;let l=Array.from({length:s+1},(e,t)=>n+r*t);const m=e.selectedComponent.turretInflections.filter(e=>e>n&&e<n);(l=l.concat(m)).sort((e,t)=>e-t);var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(0,0,0));let u=0;for(let t=0;t<l.length;t+=1){const r=e.selectedComponent.getTurretPitchRange(e,l[t]),m=(r.max-r.min)/o,h=Array.from({length:o+1},(e,t)=>r.min+m*t);for(const e of h)c.vertices.push(this.sphericalToCartesian(l[t],e,i));const d=(u+=h.length)-h.length+1,p=u-2*h.length+1,g=0;if(t>0){for(let e=0;e<h.length-1;e+=1){const t=p+e,i=p+e+1,n=d+e,a=d+e+1;c.faces.push(new THREE.Face3(t,i,a)),c.faces.push(new THREE.Face3(t,a,n))}const e=p,t=p+o,i=d,n=d+o;c.faces.push(new THREE.Face3(g,e,i)),c.faces.push(new THREE.Face3(g,n,t))}if(a-n<360)for(let e=0;e<h.length-1;e+=1)0==t&&c.faces.push(new THREE.Face3(g,d+e+1,d+e)),t==s&&c.faces.push(new THREE.Face3(g,d+e,d+e+1))}c.computeFaceNormals(),c.computeVertexNormals();const h=this.customization.shipId.specificationId+"."+e.port.name,d=_.get(turretRotations,h+".flip",!1),p=_.get(turretRotations,h+".roll",0),g=_.get(turretRotations,h+".yaw",0);if(d){let e=new THREE.Matrix4;e.elements[5]=-1,c.applyMatrix(e)}c.rotateX(p*Math.PI/180),c.rotateZ(g*Math.PI/180);let f={actual:new THREE.Scene,stencil:new THREE.Scene,geometry:c},C=actualMaterial;this.customization.hoveredBindings.some(t=>t==e||t.parentBinding==e)&&(C=hoverMaterial),f.actual.add(new THREE.Mesh(c,C)),f.actual.add(new THREE.AmbientLight),f.stencil.add(new THREE.Mesh(c,stencilMaterial)),this.segments[e.port.name]=f}},mounted(){this.cameraDistance=500,this.sceneRadius=100;const e=2*this.sceneRadius,t=2*this.sceneRadius,i=2*this.cameraDistance;this.camera=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,5,i),this.positionCamera(),this.controls=new THREE.TrackballControls(this.camera,this.$refs.canvas),this.controls.rotateSpeed=1.5,this.controls.noZoom=!0,this.controls.noPan=!0,this.controls.staticMoving=!0,this.controls.dynamicDampingFactor=.3,this.controls.addEventListener("change",this.onControlsChange),this.renderer=new THREE.WebGLRenderer({canvas:this.$refs.canvas,antialias:!0,stencil:!0,alpha:!0}),this.renderer.setClearColor(0,0),this.renderer.setPixelRatio(window.devicePixelRatio||1),this.renderer.autoClear=!1,this.baseScene=new THREE.Scene;const n=new THREE.AxesHelper(this.sceneRadius);this.baseScene.add(n);let a=new THREE.Mesh(new THREE.ConeGeometry(10,25,3),new THREE.MeshPhongMaterial({color:6316128,flatShading:!0}));a.rotation.z=-Math.PI/2,this.baseScene.add(a),this.baseScene.add(new THREE.AmbientLight(11603401));let s=new THREE.DirectionalLight;s.position.x=-.15,s.position.y=-.25,s.position.z=1,this.baseScene.add(s),this.segments={},this.makeCoverageSegments(),this.onResize(void 0,16),this.updateControls(),window.addEventListener("resize",this.onResize)},beforeDestroy(){window.removeEventListener("resize",this.onResize),this.controls.dispose(),this.renderer.dispose(),this.renderer.forceContextLoss(),this.renderer=void 0}}),sizeCategoryOrder=["Ground","Small","Medium","Large","Capital"],shipList=Vue.component("ship-list",{template:"#ship-list",data:function(){return{searchInput:"",tableHeight:this.getTableHeight(),selected:new Set,comparing:!1,compareDisabled:!0,attributeColumns:[{title:" ",fixed:"left",minWidth:55,align:"center",render:(e,t)=>{let i={name:"customize",params:{serialized:t.row.serialized}};return t.row.storageKey&&(i.name="loadout",i.params.storageKey=t.row.storageKey),e("router-link",{props:{to:i}},[e("Button",{props:{type:"primary",size:"small"}},"Edit")])}},{title:"Mnfr",key:"Manufacturer",filters:this.getAttributeFilter("Manufacturer"),filterMethod:(e,t)=>t.Manufacturer==e,fixed:"left",minWidth:60,ellipsis:!0},{title:"Ship",key:"Ship Name",sortable:!0,fixed:"left",minWidth:155,ellipsis:!0},this.addDefaultLoadoutFilter({title:"Loadout",key:"Loadout Name",sortable:!0,sortMethod:(e,t,i)=>((e||"")>(t||"")?1:-1)*("asc"==i?1:-1),filters:["Stock","Custom"].map(e=>({label:e,value:e})),filterMethod:(e,t)=>"Custom"==e?t["Loadout Name"]:!t["Loadout Name"],fixed:"left",minWidth:115,ellipsis:!0}),{title:" ",fixed:"left",width:30,align:"center",render:(e,t)=>e("Checkbox",{props:{value:this.selected.has(t.row.selectionKey),disabled:this.comparing},on:{input:e=>{e?this.selected.add(t.row.selectionKey):this.selected.delete(t.row.selectionKey),this.compareDisabled=0==this.selected.size,this.$emit("input",e)}}})},{title:"Size",key:"Size Category",sortable:!0,sortMethod:(e,t,i)=>(sizeCategoryOrder.indexOf(e)>sizeCategoryOrder.indexOf(t)?1:-1)*("asc"==i?1:-1),renderHeader:this.renderSortableHeaderWithTooltip,filters:sizeCategoryOrder.map(e=>({label:e,value:e})),filterMethod:(e,t)=>t["Size Category"]==e,minWidth:75},{title:"Crew",key:"Crew",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:65},{title:"Cargo",key:"Cargo Capacity",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:70},{title:"Turn",key:"Turn Rate Limit",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:60},{title:"SCM Speed",key:"Normal Speed",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:100},{title:"Max Speed",key:"Maximum Speed",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:100},{title:"HP",key:"Total Hitpoints",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:60},{title:"Shields",key:"Total Shields",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:80},{title:"DPS",key:"Total Sustained DPS",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:60},{title:"Burst DPS",key:"Total Burst DPS",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:95},{title:"Missiles",key:"Total Missile Damage",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:85},{title:"Qntm Speed",key:"Quantum Speed",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:105},{title:"Qntm Range",key:"Quantum Range",sortable:!0,renderHeader:this.renderSortableHeaderWithTooltip,minWidth:105}]}},computed:{shipAttributes:function(){return loadoutStorage.all.concat(defaultShipCustomizations).filter(e=>{return(e.displayName+" "+e.name).toLowerCase().includes(this.searchInput.toLowerCase())}).map(e=>{let t=e.attributes.reduce((e,t)=>(e[t.name]=t.value,e),{});return t.serialized=e.serialize(),t.storageKey=e.storageKey,t.selectionKey=t.serialized+t.storageKey,t}).filter(e=>!this.comparing||this.selected.has(e.selectionKey))},shipAttributeDescriptions:function(){return defaultShipCustomizations[0].attributes.reduce((e,t)=>(e[t.name]=t.description,e),{})}},methods:{getTableHeight:()=>window.innerHeight-192,onResize(e){this.tableHeight=this.getTableHeight()},onCompareSelected(e){this.comparing=!this.comparing,sendEvent("Comparison","Compare",this.comparing)},onSortChange(e){sendEvent("Comparison","Sort",e.key)},onFilterChange(e){sendEvent("Comparison","Filter",e.key)},getAttributeFilter:e=>[...new Set(defaultShipCustomizations.map(t=>t.attributes.find(t=>t.name==e).value))].sort().map(e=>({label:e,value:e})),addDefaultLoadoutFilter:function(e){return"saved"==this.$route.name&&(e.filteredValue=["Custom"]),e},renderSortableHeaderWithTooltip(e,t){return e("span",{on:{click:()=>{this.$refs.table.$children[0].handleSortByHead(t.index)}},class:"ivu-table-cell-sort"},[e("Tooltip",{props:{content:this.shipAttributeDescriptions[t.column.key],placement:"top",transfer:!0}},t.column.title)])}},watch:{searchInput:function(e){sendEvent("Comparison","Search",e)}},mounted(){window.addEventListener("resize",this.onResize)},beforeDestroy(){window.removeEventListener("resize",this.onResize)}}),shipDetails=Vue.component("ship-details",{template:"#ship-details",data:function(){return{showModal:!1,loadoutName:"",selectedCustomization:{},sectionNames:["Guns","Missiles","Systems","Flight"],expandedSections:["Guns","Missiles","Systems","Flight"],sectionDefinitions:{Guns:["WeaponGun","Turret","TurretBase","Misc"],Missiles:["MissileLauncher"],Systems:["Cooler","Shield","PowerPlant","QuantumDrive"],Flight:["MainThruster","ManneuverThruster"]},summaryColumns:[{title:"Summary",key:"name1",render:(e,t)=>this.renderNameCell(e,t,"1","bottom",-16),width:85},{title:" ",key:"value1"},{title:" ",key:"name2",render:(e,t)=>this.renderNameCell(e,t,"2","bottom",-16),width:115},{title:" ",key:"value2"},{title:" ",key:"name3",render:(e,t)=>this.renderNameCell(e,t,"3","bottom",-16),width:110},{title:" ",key:"value3",width:60}],missileColumns:[{title:"Missiles",key:"name",render:this.renderNameCell},{title:" ",key:"value",align:"right",width:75}],maneuverabilityColumns:[{title:"Maneuverability",key:"name",render:this.renderNameCell},{title:" ",key:"value",align:"right",width:75}],survivabilityColumns:[{title:"Survivability",key:"name",render:this.renderNameCell},{title:" ",key:"value",align:"right",width:75}],travelColumns:[{title:"Travel",key:"name",render:this.renderNameCell},{title:" ",key:"value",align:"right",width:75}]}},watch:{selectedCustomization:{handler:function(e){e.calculateDerivedValues();const t=e.serialize();let i=new URL(location.href);const n=i.href;i.hash=i.hash.split("/").slice(0,-1).concat(t).join("/"),i!=n&&(history.replaceState(history.state,document.title,i.href),e.storageKey&&loadoutStorage.set(e,t))},deep:!0}},computed:{scdbLink:function(){const e=this.selectedCustomization.shipId.combinedId;return"http://starcitizendb.com/ships/"+e.split("_")[0]+"/"+e},wikiLink:function(){return"https://starcitizen.tools/"+this.selectedCustomization.shipId.combinedId},modalAction:function(){return this.selectedCustomization.storageKey?"Rename":"Save"},modalTitle:function(){return this.modalAction+" Loadout"},showTurretCoverage:function(){if(!turretRotationsDefined[this.selectedCustomization.shipId.combinedId])return!1;const e=["Turret","TurretBase"];return Object.values(this.selectedCustomization.childBindings).filter(t=>e.includes(_.get(t,"selectedComponent.type"))).length>0},attributes:function(){return this.selectedCustomization.attributes},summaryData:function(){const e=(e,t,i)=>{const n=this.attributes.find(t=>t.name==e),a=this.attributes.find(e=>e.name==t),s=this.attributes.find(e=>e.name==i);return formatNumber(n.value)+" / "+formatNumber(a.value)+" ("+s.value+" efficiency)"},t=e("Power Usage","Power Generation","Power Efficiency"),i=e("Cooling Usage","Cooling Available","Cooling Efficiency"),n=this.attributes.find(e=>"Total Burst DPS"==e.name),a=this.attributes.find(e=>"Total Sustained DPS"==e.name),s=this.attributes.find(e=>"EM Signature"==e.name),o=this.attributes.find(e=>"IR Signature"==e.name);return[{name1:"Power",iconType1:"md-flash",iconColor1:"LightSeaGreen",value1:t,description1:"Total power used by all components compared to total power available -- exceeding power capacity inhibits or disables impacted components",name2:"EM Signature",iconType2:"ios-magnet",iconColor2:"rgb(190,85,4)",value2:formatNumber(s.value),description2:s.description,name3:"Burst DPS",value3:formatNumber(n.value),description3:n.description},{name1:"Cooling",iconType1:"ios-snow",iconColor1:"SteelBlue",value1:i,description1:"Total cooling used by all components compared to total cooling available -- exceeding cooling capacity causes components to cool at a reduced rate",name2:"IR Signature",iconType2:"ios-flame",iconColor2:"DarkRed",value2:formatNumber(o.value),description2:o.description,name3:"Sustained DPS",value3:formatNumber(a.value),description3:a.description}]}},methods:{getAttributes(e){return this.attributes.filter(t=>t.category==e&&!t.comparison)},getSectionBindingGroups:function(e){const t=Object.keys(this.sectionDefinitions).indexOf(e);let i=[];Object.keys(this.sectionDefinitions).forEach((e,n)=>{n>t&&(i=i.concat(this.sectionDefinitions[e]))});const n=this.sectionDefinitions[e];let a=this.selectedCustomization.childGroups.filter(e=>n.some(t=>e.members[0].port.matchesType(t,void 0))).filter(e=>!i.some(t=>e.members[0].port.matchesType(t,void 0)));return a=a.filter(e=>e.members[0].port.types.some(e=>"Misc"!=e.type)||e.members[0].childGroups.some(e=>e.members[0].port.types.some(e=>"WeaponGun"==e.type)))},getChildBindingGroups:function(e){let t=e.childGroups.filter(e=>e.members[0].port.types.some(e=>"Cargo"!=e.type));return t=(t=t.filter(e=>e.members[0].port.types.length)).filter(e=>e.members[0].port.types.some(e=>"WeaponAttachment"!=e.type))},onOpenModal:function(e){this.showModal=!0,this.loadoutName=this.selectedCustomization.name||"Custom"},onCancelModal:function(e){this.showModal=!1},onConfirmModal:function(e){if(this.showModal=!1,!this.selectedCustomization.storageKey){const e=encodeInt24(_.random(0,2**24))+encodeInt24(_.random(0,2**24));this.selectedCustomization.storageKey=e}this.selectedCustomization.name=this.loadoutName,loadoutStorage.set(this.selectedCustomization);let t=new URL(location.href);t.hash=["/loadouts",this.selectedCustomization.storageKey].concat(t.hash.split("/").slice(-1)).join("/"),history.replaceState(history.state,document.title,t.href),sendEvent("Customize","Save",this.selectedCustomization.name)},onClickDelete:function(e){sendEvent("Customize","Delete",this.selectedCustomization.name),loadoutStorage.remove(this.selectedCustomization.storageKey),this.selectedCustomization.storageKey=void 0,this.selectedCustomization.name=void 0,history.replaceState(history.state,document.title,makeCustomizationUrl().href)},onMouseOver:function(e){this.selectedCustomization.hoveredBindings=e},onMouseLeave:function(){this.selectedCustomization.hoveredBindings=[]},renderNameCell(e,t,i="",n="left",a="0"){let s=t.row["name"+i];const o=t.row["iconType"+i];return o&&(icon=e("icon",{props:{type:o,size:14,color:t.row["iconColor"+i]}}),s=[icon,s]),e("Tooltip",{props:{content:t.row["description"+i],placement:n,transfer:!0,offset:"0, "+a,options:{modifiers:{flip:{enabled:!1}}}}},s)}},created(){const e=this.$route.params.storageKey,t=this.$route.params.serialized,i=loadoutStorage.get(e);e&&i?this.selectedCustomization=ShipCustomization.deserialize(t,e,i.name):(this.selectedCustomization=ShipCustomization.deserialize(t),history.replaceState(history.state,document.title,makeCustomizationUrl().href))}});Vue.use(VueRouter);const router=new VueRouter({routes:[{name:"list",path:"/",component:shipList},{name:"saved",path:"/loadouts",component:shipList},{name:"loadout",path:"/loadouts/:storageKey/:serialized",component:shipDetails},{name:"customize",path:"/customize/:serialized",component:shipDetails},{path:"/ships/:combinedId",redirect:e=>{const t=defaultShipCustomizations.find(t=>t.shipId.combinedId==e.params.combinedId);return t?{name:"customize",params:{serialized:t.serialize()}}:{name:"list"}}},{path:"*",component:shipList}]});router.afterEach((e,t)=>{gtag("config",gaTrackingId,{page_path:e.path})});var app=new Vue({router:router,el:"#app",computed:{shipCustomizations:function(){return defaultShipCustomizations},gameDataVersion:function(){return"3.8.0-LIVE.3917186"}},methods:{onNavigationSelect:function(e){"comparison"==e?this.$router.push({name:"list"}):"saved"==e?this.$router.push({name:"saved"}):this.$router.push({name:"customize",params:{serialized:e}})}}}).$mount("#app");